# Reusable GitHub Actions workflow for Scribe evidence job

name: .scribe-in-pipeline-scan

on:
  workflow_call:
    secrets:
      SCRIBE_TOKEN:
        required: false
      DISCOVER_GITHUB_TOKEN:
        required: true
    inputs:
      target:
        type: string
        required: false
      product-key:
        type: string
        required: false
        default: "simplified_default"
      product-version:
        type: string
        required: false
        default: "v1"
      initative:
        type: string
        required: false

jobs:
  scribe-scan:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
            path: target_repo

      - name: Checkout
        uses: actions/checkout@v3
        with:
            path: compliance_repo
            repository: scribe-security/compliance

      - run: |
          ls -lh
          printenv

      - name:  Get Platforms Scope
        run: |
          ls -lh ./compliance_repo/ || true
          ls -lhR ./compliance_repo/.github || true
          source ./compliance_repo/.github/workflows/context
          printenv | grep SCRIBE_CONTEXT


      - name: Discover Github Repo
        uses: scribe-security/action-platforms@dev
        with:
          command: discover
          platform: github
          args: >-
            --scope.organization $SCRIBE_CONTEXT_ORGANIZATION
            --scope.repository $SCRIBE_CONTEXT_REPO_NAME
            --organization.mapping *::${{ inputs.product_key }}::${{ inputs.product_version }}
            --repository.mapping *::${{ inputs.product_key }}::${{ inputs.product_version }}
        env:
          SCRIBE_TOKEN: ${{ secrets.SCRIBE_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.DISCOVER_GITHUB_TOKEN }}

      # - name: Run Platforms
      #   uses: scribe-security/action-platforms@dev
      #   with:
      #     input: git:./target_repo
      #     scribe-client-secret: ${{ secrets.SCRIBE_TOKEN }}
      #     verbose: 2
      #     scribe-context: ${{ env.SCRIBE_CONTEXT }}



      # # if target is provided, scan the target
      # - name:  Target Image, Src, Generate BOM abd SLSA, upload to scribe
      #   if : ${{ inputs.target }}
      #   id: bom_image_tag
      #   uses: scribe-security/action-bom@dev
      #   with:
      #     target: ${{ inputs.target }}
      #     input: git:./target_repo
      #     provenance: true
      #     verbose: 2
      #     filter-regex: ./**/test/**/
      #     scribe-client-secret: ${{ secrets.SCRIBE_TOKEN }}

      #     # product-key: valint
      #     # product-version: ${{ env.version }}
         