# Reusable GitHub Actions workflow for Scribe evidence job

name: .scribe-in-pipeline-scan

on:
  workflow_call:
    secrets:
      SCRIBE_TOKEN:
        required: false
      DISCOVER_GITHUB_TOKEN:
        required: true
    inputs:
      target:
        type: string
        required: false
      product-key:
        type: string
        required: false
        default: "simplified_default"
      product-version:
        type: string
        required: false
        default: "v1"
      initative:
        type: string
        required: false

jobs:
  scribe-scan:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
            path: target_repo

      - name: Checkout
        uses: actions/checkout@v3
        with:
            path: compliance_repo
            repository: scribe-security/compliance

      - name:  Get Platforms Scope
        run: |
          source ./compliance_repo/.github/workflows/context

          # if target is provided get repo and repo namesapce from last two elements
          if [ -n "${{ inputs.target }}" ]; then
            export SCRIBE_CONTEXT_IMAGE_NAMESPACE=$(echo ${{ inputs.target }} | awk -F'/' '{print $(NF-1)}')
            export SCRIBE_CONTEXT_IMAGE_REPO=$(echo ${{ inputs.target }} | awk -F'/' '{print $NF}')
            echo "SCRIBE_CONTEXT_IMAGE_NAMESPACE=${SCRIBE_CONTEXT_IMAGE_NAMESPACE}" >> $GITHUB_ENV
            echo "SCRIBE_CONTEXT_IMAGE_REPO=${SCRIBE_CONTEXT_IMAGE_REPO}" >> $GITHUB_ENV
          fi

          printenv | grep SCRIBE_CONTEXT

      - name: Discover Github Repo
        uses: scribe-security/action-platforms@dev
        with:
          command: discover
          platform: github
          log-level: TRACE
          args: >-
            --scope.organization=${{ env.SCRIBE_CONTEXT_ORGANIZATION }}
            --scope.repository ${{ env.SCRIBE_CONTEXT_REPO_NAME }}
            --organization.mapping=${{ env.SCRIBE_CONTEXT_ORGANIZATION }}::${{ inputs.product-key }}::${{ inputs.product-version }}
            --repository.mapping=${{ env.SCRIBE_CONTEXT_REPO_NAME }}::${{ inputs.product-key }}::${{ inputs.product-version }}
            --workflow.skip --commit.skip --scope.branch=main
        env:
          SCRIBE_TOKEN: ${{ secrets.SCRIBE_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.DISCOVER_GITHUB_TOKEN }}


      # - name: Discover Dockerhub Repo
      #   uses: scribe-security/action-platforms@dev
      #   with:
      #     command: discover
      #     platform: dockerhub
      #     log-level: TRACE
      #     args: >-
      #       --namespace-list=${{ env.SCRIBE_CONTEXT_ORGANIZATION }}
      #       --repository.mapping=${{ inputs.product-key }}::${{ inputs.product-key }}::${{ inputs.product-version }}
      #       --repository.mapping=gatekeeper-${{ inputs.product-key }}::${{ inputs.product-key }}::${{ inputs.product-version }}
      #       --workflow.skip --commit.skip

      - name: Upload Database Artifact
        uses: actions/upload-artifact@v4
        with:
          path: |
            platforms.db
            output

      # - name: Run Platforms
      #   uses: scribe-security/action-platforms@dev
      #   with:
      #     input: git:./target_repo
      #     scribe-client-secret: ${{ secrets.SCRIBE_TOKEN }}
      #     verbose: 2
      #     scribe-context: ${{ env.SCRIBE_CONTEXT }}



      # # if target is provided, scan the target
      # - name:  Target Image, Src, Generate BOM abd SLSA, upload to scribe
      #   if : ${{ inputs.target }}
      #   id: bom_image_tag
      #   uses: scribe-security/action-bom@dev
      #   with:
      #     target: ${{ inputs.target }}
      #     input: git:./target_repo
      #     provenance: true
      #     verbose: 2
      #     filter-regex: ./**/test/**/
      #     scribe-client-secret: ${{ secrets.SCRIBE_TOKEN }}

      #     # product-key: valint
      #     # product-version: ${{ env.version }}
         